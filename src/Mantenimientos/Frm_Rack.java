/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Mantenimientos;

import Model.Distribution_Center;
import Model.LocationCell;
import Model.LocationCellDetail;
import Model.Log;
import Model.Rack;
import Model.Warehouse;
import dao.DaoDistributionCenter;
import dao.DaoLog;
import dao.DaoRack;
import dao.DaoWH;
import dao.impl.DaoDistributionCenterImpl;
import dao.impl.DaoLogImpl;
import dao.impl.DaoRackImpl;
import dao.impl.DaoWHImpl;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Luigi
 */
public class Frm_Rack extends javax.swing.JFrame {

    /**
     * Creates new form Frm_rack
     */
    static final int NUM_CEL_DETAILS = 2;
    
    Frm_Rack_Search menu_padre = new Frm_Rack_Search();
    Rack rack = null;
    int currentDC=1, currentWH=0;
    DaoDistributionCenter daoDC = new DaoDistributionCenterImpl();
    ArrayList<Distribution_Center> distributionCenterList = new ArrayList<>();
    DaoWH daoWH = new DaoWHImpl();
    ArrayList<Warehouse> warehouseList = new ArrayList<>();
    DaoRack daoRack = new DaoRackImpl();
    
    public Frm_Rack(Frm_Rack_Search menu, Rack rack) {
        setTitle("Mantenimiento de Racks"); 
        menu_padre = menu;
        this.rack = rack;
        initComponents();
        
        distributionCenterList = daoDC.distribution_centerGetQry();
        warehouseList = daoWH.whSearchByID(distributionCenterList.get(0));
        
        cbo_distribution_center.setEnabled(false);
        distributionCenterList = daoDC.distribution_centerGetQry();
        for (int i = 0; i < distributionCenterList.size(); i++) {
            this.cbo_distribution_center.addItem(distributionCenterList.get(i).getName());
        }
        currentDC = 1;
        warehouseList = daoWH.whSearchByID(distributionCenterList.get(0));
        for (int i = 0; i < warehouseList.size(); i++)
            this.cbo_warehouse.addItem(warehouseList.get(i).getDescription());
        if (cbo_warehouse.getSelectedItem()!=null) currentWH = warehouseList.get(0).getIdWarehouse();
        
        if(rack!=null){
            initializeForm();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_rack = new javax.swing.JPanel();
        lbl_warehouse = new javax.swing.JLabel();
        cbo_distribution_center = new javax.swing.JComboBox();
        cbo_warehouse = new javax.swing.JComboBox();
        lbl_distribution_center = new javax.swing.JLabel();
        lbl_identifier = new javax.swing.JLabel();
        txt_identifier = new javax.swing.JTextField();
        lbl_description = new javax.swing.JLabel();
        txt_description = new javax.swing.JTextField();
        btn_save = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jpn_dimension = new javax.swing.JPanel();
        lbl_height_per_floor = new javax.swing.JLabel();
        lbl_floor_numbers = new javax.swing.JLabel();
        txt_floor_numbers = new javax.swing.JTextField();
        txt_height_per_floor = new javax.swing.JTextField();
        lbl_column_numbers = new javax.swing.JLabel();
        txt_resistance_weigth_per_floor = new javax.swing.JTextField();
        lbl_resistance_weigth_per_floor = new javax.swing.JLabel();
        txt_column_numbers = new javax.swing.JTextField();
        lbl_length = new javax.swing.JLabel();
        txt_length = new javax.swing.JTextField();
        lbl_width = new javax.swing.JLabel();
        txt_width = new javax.swing.JTextField();
        lbl_unit_length = new javax.swing.JLabel();
        lbl_unit_width = new javax.swing.JLabel();
        lbl_unit_height_per_floor = new javax.swing.JLabel();
        lbl_unit_resistance_weigth_per_floor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pnl_rack.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Generales"));

        lbl_warehouse.setText("Almacen (*)");

        lbl_distribution_center.setText("Centro de Distribucion");

        lbl_identifier.setText("ID (*)");

        lbl_description.setText("Descripcion (*)");

        javax.swing.GroupLayout pnl_rackLayout = new javax.swing.GroupLayout(pnl_rack);
        pnl_rack.setLayout(pnl_rackLayout);
        pnl_rackLayout.setHorizontalGroup(
            pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_rackLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_distribution_center)
                    .addComponent(lbl_warehouse)
                    .addComponent(lbl_identifier)
                    .addComponent(lbl_description))
                .addGap(57, 57, 57)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_identifier, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_description, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_warehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_distribution_center, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        pnl_rackLayout.setVerticalGroup(
            pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_rackLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_distribution_center)
                    .addComponent(cbo_distribution_center, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_warehouse)
                    .addComponent(cbo_warehouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_identifier)
                    .addComponent(txt_identifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_rackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_description)
                    .addComponent(txt_description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_save.setText("Guardar");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancelar");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jpn_dimension.setBorder(javax.swing.BorderFactory.createTitledBorder("Dimensiones"));

        lbl_height_per_floor.setText("Altura por Piso (*)");

        lbl_floor_numbers.setText("Nro. Pisos (*)");

        lbl_column_numbers.setText("Nro. Columnas (*)");

        lbl_resistance_weigth_per_floor.setText("Resistencia Peso por Piso (*)");

        lbl_length.setText("Largo (*)");

        lbl_width.setText("Ancho (*)");

        lbl_unit_length.setText("m2");

        lbl_unit_width.setText("m2");

        lbl_unit_height_per_floor.setText("m2");

        lbl_unit_resistance_weigth_per_floor.setText("Kg");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel1.setText("(*) Campos Obligatorios");

        javax.swing.GroupLayout jpn_dimensionLayout = new javax.swing.GroupLayout(jpn_dimension);
        jpn_dimension.setLayout(jpn_dimensionLayout);
        jpn_dimensionLayout.setHorizontalGroup(
            jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jpn_dimensionLayout.createSequentialGroup()
                        .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_width, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_length, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_height_per_floor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_resistance_weigth_per_floor, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                        .addGap(21, 21, 21)
                        .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                                .addComponent(txt_length, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_unit_length))
                            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                                .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_unit_width))
                            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                                .addComponent(txt_height_per_floor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_unit_height_per_floor))
                            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                                .addComponent(txt_resistance_weigth_per_floor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_unit_resistance_weigth_per_floor)))
                        .addGap(91, 91, 91)
                        .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_floor_numbers)
                            .addComponent(lbl_column_numbers))
                        .addGap(33, 33, 33)
                        .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_column_numbers, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_floor_numbers, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jpn_dimensionLayout.setVerticalGroup(
            jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn_dimensionLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_length)
                    .addComponent(txt_length, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_floor_numbers)
                    .addComponent(txt_floor_numbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_unit_length))
                .addGap(18, 18, 18)
                .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_width)
                    .addComponent(txt_width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_column_numbers)
                    .addComponent(txt_column_numbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_unit_width))
                .addGap(36, 36, 36)
                .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_height_per_floor)
                    .addComponent(txt_height_per_floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_unit_height_per_floor))
                .addGap(18, 18, 18)
                .addGroup(jpn_dimensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_resistance_weigth_per_floor)
                    .addComponent(txt_resistance_weigth_per_floor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_unit_resistance_weigth_per_floor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_rack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpn_dimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btn_save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_cancel)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_rack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpn_dimension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_cancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initializeForm() {
        cbo_distribution_center.setEnabled(false);
        for(int i=0; i<distributionCenterList.size();i++){
            if(distributionCenterList.get(i).getIdDistribution_Center() == rack.getWarehouse_Distribution_Center_idDistribution_Center()){
                if(cbo_distribution_center.getSelectedItem()!=null) cbo_distribution_center.removeAllItems();
                cbo_distribution_center.addItem(distributionCenterList.get(i).getName());
            }
        }
        cbo_warehouse.setEnabled(false);
        for(int i=0; i<warehouseList.size();i++){
            if(warehouseList.get(i).getIdWarehouse()== rack.getWarehouse_idWarehouse()){
                if(cbo_warehouse.getSelectedItem()!=null) cbo_warehouse.removeAllItems();
                cbo_warehouse.addItem(warehouseList.get(i).getDescription());
            }
        }
        txt_identifier.setText(rack.getIdentifier());
        txt_description.setText(rack.getDescription());
        txt_length.setText(rack.getLength().toString());
        txt_width.setText(rack.getWidth().toString());
        txt_floor_numbers.setText(rack.getFloor_numbers().toString());
        txt_column_numbers.setText(rack.getColumn_number().toString());
        txt_height_per_floor.setText(rack.getHeight_per_floor().toString());
        txt_resistance_weigth_per_floor.setText(rack.getResistance_weigth_per_floor().toString());
        
        txt_length.setEnabled(false);
        txt_width.setEnabled(false);
        txt_floor_numbers.setEnabled(false);
        txt_column_numbers.setEnabled(false);
        txt_height_per_floor.setEnabled(false);
        txt_resistance_weigth_per_floor.setEnabled(false);
    }
    
    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        this.dispose();
        menu_padre.setVisible(true);
        menu_padre.initializeTable();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.dispose();
        menu_padre.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        int idRack;
        try {
            Object[] options = {"OK"};
            if (JOptionPane.showConfirmDialog(new JFrame(), "¿Desea realizar acción?",
                    "Advertencias", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                if (rack == null) { // si es nuevo
                    if (rackValidatedToSave(txt_identifier.getText().trim())) {
                        for (int i = 0; i < warehouseList.size(); i++) {
                            if (cbo_warehouse.getSelectedItem().equals(warehouseList.get(i).getDescription())) {
                                this.currentWH = warehouseList.get(i).getIdWarehouse();
                                break;
                            }
                        }
                        rack = new Rack();
                        rack.setWarehouse_Distribution_Center_idDistribution_Center(currentDC);
                        rack.setIdentifier(txt_identifier.getText().trim());
                        rack.setDescription(txt_description.getText().trim());
                        rack.setWarehouse_idWarehouse(currentWH);
                        rack.setLength(Double.parseDouble(txt_length.getText()));
                        rack.setWidth(Double.parseDouble(txt_width.getText()));
                        rack.setFloor_numbers(Integer.parseInt(txt_floor_numbers.getText()));
                        rack.setColumn_number(Integer.parseInt(txt_column_numbers.getText()));
                        rack.setHeight_per_floor(Integer.parseInt(txt_height_per_floor.getText()));
                        rack.setResistance_weigth_per_floor(Integer.parseInt(txt_resistance_weigth_per_floor.getText()));

                        daoRack.rackIns(rack);
                        idRack = daoRack.rackMaxIdGet();
                        rack.setIdRack(idRack);
                        buildRackLocationCells(rack);
                        DaoLog daoLog = new DaoLogImpl();
                        Log logSI = null;
                        daoLog.clientIns("Se ha ingresado un nuevo rack al sistema con ID " + rack.getIdentifier(), Frm_Rack.class.toString(), logSI.getIduser());
                        int ok_option = JOptionPane.showOptionDialog(new JFrame(), "Se ha registrado al rack con éxito", "Mensaje", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                        if (ok_option == JOptionPane.OK_OPTION) {
                            menu_padre.setVisible(true);
                            menu_padre.setLocationRelativeTo(null);
                            menu_padre.initializeTable();
                            this.dispose();
                        }
                    }
                } else { // si es modificacion
                    if (txt_identifier.getText().trim().length() != 0 && txt_identifier.getText().trim().length() <= 11) {
                        rack.setIdentifier(txt_identifier.getText().trim());
                        rack.setDescription(txt_description.getText().trim());
                        rack.setLength(Double.parseDouble(txt_length.getText()));
                        rack.setWidth(Double.parseDouble(txt_width.getText()));
                        rack.setFloor_numbers(Integer.parseInt(txt_floor_numbers.getText()));
                        rack.setColumn_number(Integer.parseInt(txt_column_numbers.getText()));
                        rack.setHeight_per_floor(Integer.parseInt(txt_height_per_floor.getText()));
                        rack.setResistance_weigth_per_floor(Integer.parseInt(txt_resistance_weigth_per_floor.getText()));

                        daoRack.rackUpd(rack);
                        DaoLog daoLog = new DaoLogImpl();
                        Log logSI = null;
                        daoLog.clientIns("Se ha modificado el rack con ID " + rack.getIdentifier(), Frm_Rack.class.toString(), logSI.getIduser());
                        int ok_option = JOptionPane.showOptionDialog(new JFrame(), "Se ha registrado al rack con éxito", "Mensaje", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                        if (ok_option == JOptionPane.OK_OPTION) {
                            menu_padre.setVisible(true);
                            menu_padre.setLocationRelativeTo(null);
                            menu_padre.initializeTable();
                            this.dispose();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "El código de rack no puede ser vacio o mayor a 11 caracteres",
                                "Advertencias", JOptionPane.WARNING_MESSAGE);
                    }

                }

            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Algunos datos deben ser numéricos",
                    "Advertencias", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_btn_saveActionPerformed
    
    private boolean rackValidatedToSave(String identifier) {
        String empty = "";
        if (empty.equals(identifier)) {
            JOptionPane.showMessageDialog(null, "El código de rack no puede ser vacio",
                    "Advertencias", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (daoRack.existsRackName(identifier)) {
            JOptionPane.showMessageDialog(null, "El código de rack ya existe",
                    "Advertencias", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (identifier.length()>11) {
            JOptionPane.showMessageDialog(null, "El código de rack es muy largo",
                    "Advertencias", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void buildRackLocationCells(Rack rack){
        int numFloors = rack.getFloor_numbers();
        int length = rack.getLength().intValue();
        int numColumns = rack.getColumn_number();
        //int numLCDByLC = length/numColumns;
        int numLCDByLC = NUM_CEL_DETAILS;
        int idLocationCell = 0;
        int idLocationCellDetail = 0;
        
        for (int i=0; i<numFloors; i++){
            for (int j=0; j<numColumns; j++){
                idLocationCell++;
                LocationCell locationCell = new LocationCell();
                locationCell.setIdLocation_Cell(idLocationCell);
                locationCell.setDescription("LC "+idLocationCell);
                locationCell.setWidth(rack.getWidth());
                locationCell.setLength((length/numColumns)*1.0);
                locationCell.setHeight(rack.getHeight_per_floor());
                locationCell.setRow_Cell(i+1);
                locationCell.setColumn_Cell(j+1);
                locationCell.setStatus(1);
                locationCell.setLocation_State_idLocation_State(1);
                locationCell.setRack_idRack(rack.getIdRack());
                locationCell.setRack_Warehouse_idWarehouse(rack.getWarehouse_idWarehouse());
                locationCell.setRack_Warehouse_Distribution_Center_idDistribution_Center(rack.getWarehouse_Distribution_Center_idDistribution_Center());
                daoRack.rackLocationCellsIns(locationCell);
                for (int k=0; k<numLCDByLC; k++){
                    LocationCellDetail locationCellDetail = new LocationCellDetail();
                    idLocationCellDetail = k + 1;
                    locationCellDetail.setIdLocation_Cell_Detail(idLocationCellDetail);
                    locationCellDetail.setDescription("LCD "+idLocationCellDetail);
                    locationCellDetail.setAvailability(1);
                    locationCellDetail.setLocation_Cell_idLocation_Cell(idLocationCell);
                    locationCellDetail.setLocation_Cell_Rack_idRack(rack.getIdRack());
                    locationCellDetail.setLocation_Cell_Rack_Warehouse_idWarehouse(rack.getWarehouse_idWarehouse());
                    locationCellDetail.setIdDistribution_Center(rack.getWarehouse_Distribution_Center_idDistribution_Center());                    
                    daoRack.rackLocationCellDetailIns(locationCellDetail);
                }
            }
        }        
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Frm_rack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Frm_rack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Frm_rack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Frm_rack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Frm_rack().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_save;
    private javax.swing.JComboBox cbo_distribution_center;
    private javax.swing.JComboBox cbo_warehouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jpn_dimension;
    private javax.swing.JLabel lbl_column_numbers;
    private javax.swing.JLabel lbl_description;
    private javax.swing.JLabel lbl_distribution_center;
    private javax.swing.JLabel lbl_floor_numbers;
    private javax.swing.JLabel lbl_height_per_floor;
    private javax.swing.JLabel lbl_identifier;
    private javax.swing.JLabel lbl_length;
    private javax.swing.JLabel lbl_resistance_weigth_per_floor;
    private javax.swing.JLabel lbl_unit_height_per_floor;
    private javax.swing.JLabel lbl_unit_length;
    private javax.swing.JLabel lbl_unit_resistance_weigth_per_floor;
    private javax.swing.JLabel lbl_unit_width;
    private javax.swing.JLabel lbl_warehouse;
    private javax.swing.JLabel lbl_width;
    private javax.swing.JPanel pnl_rack;
    private javax.swing.JTextField txt_column_numbers;
    private javax.swing.JTextField txt_description;
    private javax.swing.JTextField txt_floor_numbers;
    private javax.swing.JTextField txt_height_per_floor;
    private javax.swing.JTextField txt_identifier;
    private javax.swing.JTextField txt_length;
    private javax.swing.JTextField txt_resistance_weigth_per_floor;
    private javax.swing.JTextField txt_width;
    // End of variables declaration//GEN-END:variables
}
