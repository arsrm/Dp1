/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Operaciones;

import Model.InternmentOrder;
import Model.Log;
import Seguridad.Frm_MenuPrincipal;
import dao.DaoInternmentOrder;
import dao.DaoLog;
import dao.impl.DaoInternmentOrderImpl;
import dao.impl.DaoLogImpl;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import tool.SelectAllHeader;

/**
 *
 * @author Gustavo
 */
public class Frm_InternmentOrder_Search extends javax.swing.JFrame {

    /**
     * Creates new form Frm_InternmentOrder_Search
     */
    Frm_MenuPrincipal menu_padre = new Frm_MenuPrincipal();
    DefaultTableModel modelo = new DefaultTableModel();
    DaoInternmentOrder daoIntOrder = new DaoInternmentOrderImpl();
    List<InternmentOrder> intOrderList = new ArrayList<InternmentOrder>();
    List<Integer> idIntOrderDeleteList = new ArrayList<>();
    List<Integer> idIntOrderInternList;
    BarraProgreso tarea;

    public Frm_InternmentOrder_Search(Frm_MenuPrincipal menu) {
        menu_padre = menu;
        setTitle("Buscar Orden de Internamiento");
        initComponents();
        TableColumn tc = tbl_order.getColumnModel().getColumn(3);
        tc.setHeaderRenderer(new SelectAllHeader(tbl_order, 3));
        modelo = (DefaultTableModel) tbl_order.getModel();
        initializeTable();
    }

    public Frm_InternmentOrder_Search() {
    }

    class BarraProgreso extends SwingWorker<Void, Void> {

        String result = null;

        @Override
        public void done() {
            progressBar.setIndeterminate(false);
            Object[] options = {"OK"};
            int ok_option = JOptionPane.showOptionDialog(new JFrame(), "Se ha ingresado las ordenes de internamiento seleccionadas con éxito.\n" + result, "Mensaje", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (ok_option == JOptionPane.OK_OPTION) {
                initializeTable();
            }
        }

        @Override
        public Void doInBackground() throws Exception {

            int option;
            Boolean op_Intern = true;
            idIntOrderInternList = new ArrayList<>();
            if (JOptionPane.showConfirmDialog(new JFrame(), "¿Desea realizar acción?",
                    "Advertencias", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                Object[] options = {"OK"};
                for (int i = 0; i < tbl_order.getRowCount(); i++) {
                    if ((Boolean) tbl_order.getValueAt(i, 3)) {
                        if (tbl_order.getValueAt(i, 2).toString().equals("Internado")) {
                            option = JOptionPane.showOptionDialog(new JFrame(), "Solo se puede internar órdenes con estado Pendiente.", "Mensaje", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                            op_Intern = false;
                        } else {
                            idIntOrderInternList.add(Integer.parseInt(tbl_order.getValueAt(i, 0).toString()));
                        }
                    }
                }
                if (op_Intern) {
                    progressBar.setIndeterminate(true);
                    result = daoIntOrder.IntOrdersIntern(idIntOrderInternList);
                }
            }
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_criterios = new javax.swing.JPanel();
        lbl_orderDateIni = new javax.swing.JLabel();
        jDate_OrderDateIni = new com.toedter.calendar.JDateChooser();
        btn_search = new javax.swing.JButton();
        lbl_orderInt = new javax.swing.JLabel();
        txt_orderInternment = new javax.swing.JTextField();
        lbl_orderDateEnd = new javax.swing.JLabel();
        jDate_orderDateEnd = new com.toedter.calendar.JDateChooser();
        pnl_results = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_order = new javax.swing.JTable();
        btn_delete = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_Intern = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        pnl_criterios.setBorder(javax.swing.BorderFactory.createTitledBorder("Criterios de Búsqueda"));

        lbl_orderDateIni.setText("Fecha Inicio");

        btn_search.setText("Buscar");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        lbl_orderInt.setText("N° Orden de Internamiento");

        lbl_orderDateEnd.setText("Fecha Fin");

        javax.swing.GroupLayout pnl_criteriosLayout = new javax.swing.GroupLayout(pnl_criterios);
        pnl_criterios.setLayout(pnl_criteriosLayout);
        pnl_criteriosLayout.setHorizontalGroup(
            pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_criteriosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_search)
                .addGap(35, 35, 35))
            .addGroup(pnl_criteriosLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_orderDateIni)
                    .addComponent(lbl_orderInt)
                    .addComponent(lbl_orderDateEnd))
                .addGap(42, 42, 42)
                .addGroup(pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_orderInternment)
                    .addComponent(jDate_OrderDateIni, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jDate_orderDateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_criteriosLayout.setVerticalGroup(
            pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_criteriosLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDate_OrderDateIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_orderDateIni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_orderDateEnd)
                    .addComponent(jDate_orderDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(pnl_criteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_orderInt)
                    .addComponent(txt_orderInternment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(btn_search)
                .addContainerGap())
        );

        pnl_results.setBorder(javax.swing.BorderFactory.createTitledBorder("Órdenes de Internamiento"));

        tbl_order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Orden de Internamiento", "Fecha de Orden", "Estado", "Seleccionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_orderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_order);

        btn_delete.setText("Desactivar Orden");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancelar");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_Intern.setText("Internar Productos");
        btn_Intern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InternActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_resultsLayout = new javax.swing.GroupLayout(pnl_results);
        pnl_results.setLayout(pnl_resultsLayout);
        pnl_resultsLayout.setHorizontalGroup(
            pnl_resultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_resultsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_resultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_resultsLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(pnl_resultsLayout.createSequentialGroup()
                        .addComponent(btn_Intern)
                        .addGap(18, 18, 18)
                        .addComponent(btn_delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cancel)
                        .addGap(49, 49, 49))))
            .addGroup(pnl_resultsLayout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_resultsLayout.setVerticalGroup(
            pnl_resultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_resultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnl_resultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_delete)
                    .addComponent(btn_cancel)
                    .addComponent(btn_Intern))
                .addGap(18, 18, 18)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_criterios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_results, javax.swing.GroupLayout.PREFERRED_SIZE, 742, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_criterios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_results, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        menu_padre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void tbl_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_orderMouseClicked
        InternmentOrder intOrder = null;
        Integer idIntOrder;
        if (evt.getSource() == tbl_order) {
            int rowSel = tbl_order.getSelectedRow();
            int colSel = tbl_order.getSelectedColumn();
            if (colSel != 3) {
                idIntOrder = Integer.parseInt(tbl_order.getValueAt(rowSel, 0).toString());
                intOrder = daoIntOrder.IntOrderGet(idIntOrder);

                Frm_IntermentOrder_Detail frm_prodIntDetail = new Frm_IntermentOrder_Detail(this, intOrder);
                frm_prodIntDetail.setVisible(true);
                frm_prodIntDetail.setLocationRelativeTo(null);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_tbl_orderMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        menu_padre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        for (int i = 0; i < tbl_order.getRowCount(); i++) {
            if ((Boolean) tbl_order.getValueAt(i, 3)) {
                idIntOrderDeleteList.add(Integer.parseInt(tbl_order.getValueAt(i, 0).toString()));
            }
        }

        Object[] options = {"OK"};
        if (JOptionPane.showConfirmDialog(new JFrame(), "¿Desea realizar acción?",
                "Advertencias", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            daoIntOrder.IntOrderDel(idIntOrderDeleteList);
            int ok_option = JOptionPane.showOptionDialog(new JFrame(), "Se ha desactivado las ordenes de internamiento seleccionadas con éxito", "Mensaje", JOptionPane.PLAIN_MESSAGE, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (ok_option == JOptionPane.OK_OPTION) {
                initializeTable();
            }
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        Date dateIniSearch = null;
        Date dateEndSearch = null;
        Integer idIntOrdSearch;
        String status = null;

        if (txt_orderInternment.getText().length() != 0) {
            idIntOrdSearch = Integer.parseInt(txt_orderInternment.getText().toString());
        } else {
            idIntOrdSearch = 0;
        }
        if (jDate_OrderDateIni.getDate() != null) {
            dateIniSearch = jDate_OrderDateIni.getDate();
        } else {
            dateIniSearch = new Date();
            dateIniSearch.setTime(0);
        }
        if (jDate_orderDateEnd.getDate() != null) {
            dateEndSearch = jDate_orderDateEnd.getDate();
        } else {
            dateEndSearch = new Date();
        }

        List<InternmentOrder> intOrderList = daoIntOrder.IntOrderSearch(idIntOrdSearch, dateIniSearch, dateEndSearch);
        modelo.getDataVector().removeAllElements();
        modelo.fireTableDataChanged();
        try {
            for (int i = 0; i < intOrderList.size(); i++) {
                switch (intOrderList.get(i).getStatus()) {
                    case 1:
                        status = "Pendiente";
                        break;
                    case 2:
                        status = "Internado";
                        break;
                    case 0:
                        status = "Inactivo";
                }
                if (intOrderList.get(i).getIdInternmentOrder() != 999999999) {
                    Object[] fila = {intOrderList.get(i).getIdInternmentOrder(),
                        intOrderList.get(i).getDate(), status, false};
                    modelo.addRow(fila);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_InternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InternActionPerformed
        tarea = new BarraProgreso();
        tarea.execute();
    }//GEN-LAST:event_btn_InternActionPerformed

    public void initializeTable() {
        String status = null;
        modelo.getDataVector().removeAllElements();
        modelo.fireTableDataChanged();
        intOrderList = daoIntOrder.IntOrderQry();
        try {
            for (int i = 0; i < intOrderList.size(); i++) {
                switch (intOrderList.get(i).getStatus()) {
                    case 1:
                        status = "Pendiente";
                        break;
                    case 2:
                        status = "Internado";
                        break;
                    case 0:
                        status = "Inactivo";
                }
                if (intOrderList.get(i).getIdInternmentOrder() != 999999999) {
                    Object[] fila = {intOrderList.get(i).getIdInternmentOrder(),
                        intOrderList.get(i).getDate(), status, false};
                    modelo.addRow(fila);
                }
            }
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Intern;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_search;
    private com.toedter.calendar.JDateChooser jDate_OrderDateIni;
    private com.toedter.calendar.JDateChooser jDate_orderDateEnd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_orderDateEnd;
    private javax.swing.JLabel lbl_orderDateIni;
    private javax.swing.JLabel lbl_orderInt;
    private javax.swing.JPanel pnl_criterios;
    private javax.swing.JPanel pnl_results;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTable tbl_order;
    private javax.swing.JTextField txt_orderInternment;
    // End of variables declaration//GEN-END:variables
}
